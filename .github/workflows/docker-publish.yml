name: Docker Build and Publish

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_run:
    workflows: ["CI/CD"]
    types:
      - completed
    branches: [ main, develop ]

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}/auth-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}/auth-frontend
  # Security scanning configuration
  TRIVY_SEVERITY: HIGH,CRITICAL
  TRIVY_EXIT_CODE: 0

jobs:
  check-tests:
    name: Verify Tests Passed
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run'

    steps:
      - name: Check workflow conclusion
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" != "success" ]; then
            echo "‚ùå CI/CD workflow failed, skipping Docker build"
            exit 1
          fi
          echo "‚úÖ CI/CD workflow passed, proceeding with Docker build"

  build-and-push-backend:
    name: Build and Push Backend
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_run' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        if: github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: 'sarif'
          output: 'trivy-backend-results.sarif'

      - name: Upload Trivy scan results
        if: github.event_name != 'pull_request'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-backend-results.sarif'
          category: 'backend-image'

  build-and-push-frontend:
    name: Build and Push Frontend
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_run' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        if: github.event_name != 'pull_request'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          format: 'sarif'
          output: 'trivy-frontend-results.sarif'
          skip-files: '/root/.npm/_cacache/**'

      - name: Upload Trivy scan results
        if: github.event_name != 'pull_request'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-frontend-results.sarif'
          category: 'frontend-image'

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [build-and-push-backend, build-and-push-frontend]
    if: always() && github.event_name != 'pull_request'

    steps:
      - name: Security scan summary
        run: |
          echo "üõ°Ô∏è Docker Security Scan Summary"
          echo "Backend build: ${{ needs.build-and-push-backend.result }}"
          echo "Frontend build: ${{ needs.build-and-push-frontend.result }}"

          if [ "${{ needs.build-and-push-backend.result }}" != "success" ] || [ "${{ needs.build-and-push-frontend.result }}" != "success" ]; then
            echo "‚ùå One or more builds failed"
            exit 1
          fi

          echo "‚úÖ All Docker images built and scanned successfully"
